version: '3.8'
services:
  nginx-proxy:
    build:
      context: .
      dockerfile: nginx-proxy.Dockerfile
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/nginx/certs
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html

  # acme-companion:
  #   image: nginxproxy/acme-companion
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /etc/acme.sh
  #   volumes_from:
  #     - nginx-proxy:rw
  #   env_file: .env

  odoo:
    #build: .
    image: odoo:16.0
    restart: unless-stopped
    #ports:
      #- 8069:8069
    volumes:
      - odoo:/var/lib/odoo
      - ./odoo.conf:/etc/odoo/odoo.conf
      - ./addons:/mnt/extra-addons
      #- ./backups:/var/lib/odoo/backups
    env_file: .env
    environment:
      - VIRTUAL_PORT=8069
      - VIRTUAL_HOST=${ODOO_ENDPOINT}
      #- LETSENCRYPT_HOST=${ODOO_ENDPOINT}
      #- ODOO_COMMAND= --update all --stop-after-init
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    restart: unless-stopped
    #ports:
      #- 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data/pgdata
    env_file: .env

  minio:
    image: minio/minio
    #ports:
      #- 9000:9000
      #- 9001:9001
    volumes:
      - minio:/data
    env_file: .env
    environment:
      - VIRTUAL_PORT=9000
      - VIRTUAL_HOST=${MINIO_ENDPOINT}
      #- LETSENCRYPT_HOST=${MINIO_ENDPOINT}
    command: server /data --console-address ":9001"

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 \$MINIO_ROOT_USER \$MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb minio/bucket;
      exit 0;
      "

volumes:
  odoo:
  postgres:
  minio:
